{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         1.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
namespace {{ namespace }}\Policy;

use Authorization\IdentityInterface;

/**
 * {{ name }} policy
 */
class {{ name }}{{ suffix }}Policy
{
{% if type == 'entity' or type == 'table' %}
    /**
     * Check if $user can create {{ name }}
     *
     * @param Authorization\IdentityInterface $user The user.
     * @param {{ namespace }}\Model\Entity\{{ name }} ${{ variable_name }}
     * @return bool
     */
    public function canCreate(IdentityInterface $user, ${{ variable_name }})
    {
    }

    /**
     * Check if $user can update {{ name }}
     *
     * @param Authorization\IdentityInterface $user The user.
     * @param {{ namespace }}\Model\Entity\{{ name }} ${{ variable_name }}
     * @return bool
     */
    public function canUpdate(IdentityInterface $user, ${{ variable_name }})
    {
    }

    /**
     * Check if $user can delete {{ name }}
     *
     * @param Authorization\IdentityInterface $user The user.
     * @param {{ namespace }}\Model\Entity\{{ name }} ${{ variable_name }}
     * @return bool
     */
    public function canDelete(IdentityInterface $user, ${{ variable_name }})
    {
    }

    /**
     * Check if $user can view {{ name }}
     *
     * @param Authorization\IdentityInterface $user The user.
     * @param {{ namespace }}\Model\Entity\{{ name }} ${{ variable_name }}
     * @return bool
     */
    public function canView(IdentityInterface $user, ${{ variable_name }})
    {
    }
{% endif %}
}
